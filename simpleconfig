## MODEL PROXY CONFIGURATION ##

# Load only necessary modules
LoadModule security2_module modules/mod_security2.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule headers_module modules/mod_headers.so

# Essential logging
LogLevel warn
ErrorLog /var/log/httpd/proxy_error.log
CustomLog /var/log/httpd/proxy_access.log combined

<VirtualHost *:80>
    # ServerName removed as it's unnecessary for functional routing
    
    ProxyPreserveHost On
    
    # ModSecurity for JSON parsing and model extraction (read-only, no modification)
    <IfModule mod_security2.c>
        SecRuleEngine On
        SecRequestBodyAccess On
        SecResponseBodyAccess Off
        
        # Increased request body limits for large model inputs (200MB)
        SecRequestBodyLimit 209715200
        SecRequestBodyLimitAction ProcessPartial
        
        # Enable JSON processing and extract model name - without modifying the content
        SecRule REQUEST_HEADERS:Content-Type "application/json" "id:1000,pass,nolog,ctl:requestBodyProcessor=JSON"
        SecRule REQUEST_BODY "@rx \"model\"\s*:\s*\"([^\"]+)\"" "id:2000,phase:2,pass,t:none,setvar:tx.model_name=\1,setenv:MODEL_NAME=\1,nolog"
        
        # Security logging (minimal)
        SecDebugLogLevel 0
        SecAuditEngine Off
    </IfModule>
    
    # URL rewriting for request routing
    RewriteEngine On
    
    # Model-based routing based on extracted model name
    RewriteCond %{ENV:MODEL_NAME} ^gpt-model-1$ [NC]
    RewriteRule ^/$ http://triton1.internal/ [P,L]
    RewriteCond %{ENV:MODEL_NAME} ^gpt-model-2$ [NC]
    RewriteRule ^/$ http://triton2.internal/ [P,L]
    RewriteCond %{ENV:MODEL_NAME} ^gpt-model-3$ [NC]
    RewriteRule ^/$ http://triton3.internal/ [P,L]
    RewriteCond %{ENV:MODEL_NAME} ^gpt-model-4$ [NC]
    RewriteRule ^/$ http://triton4.internal/ [P,L]
    RewriteCond %{ENV:MODEL_NAME} ^gpt-model-5$ [NC]
    RewriteRule ^/$ http://triton5.internal/ [P,L]
    
    # Forward client IP and model information
    RequestHeader set X-Forwarded-For %{REMOTE_ADDR}s
    RequestHeader set X-Model-Name "%{MODEL_NAME}e" env=MODEL_NAME
    
    # Fallback for unmatched models
    RewriteRule ^/$ http://triton1.internal/ [P,L]
    
    # Streaming compatibility headers for OpenAI, LangChain, and other frameworks
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization"
    Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS"
    Header always set Cache-Control "no-store"
    
    # Proxy options to properly handle streaming responses
    ProxyRequests Off
</VirtualHost>
