<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Model API Developer Guide</title>
</head>
<body>
    <header>
        <h1>Model API Developer Guide</h1>
        <p>Welcome to the developer documentation for our Model API platform. This guide shows how to use our language models with various programming languages and tools.</p>
    </header>

    <main>
        <section>
            <h2>Getting Started</h2>
            <p>Our API follows the OpenAI-compatible protocol, making it easy to integrate with existing tools and libraries. The base endpoint is:</p>
            <pre><code>https://api.example.com</code></pre>
            <p>All requests must use <strong>HTTP POST</strong> with a JSON body that includes the <code>model</code> parameter.</p>
        </section>

        <section>
            <h2>Available Models</h2>
            <p>Models are defined in the <code>routing.conf</code> file. Contact the platform team for the most up-to-date list of supported models.</p>
            <p>The API supports both chat completion models and embedding models following the OpenAI-compatible format.</p>
        </section>

        <section>
            <h2>Chat Completion Examples</h2>
            
            <div class="code-example">
                <h3>Python</h3>
                <pre><code>import requests

url = "https://api.example.com"
headers = {"Content-Type": "application/json"}

payload = {
    "model": "gpt-model-1",
    "messages": [
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user", "content": "Tell me about neural networks."}
    ],
    "temperature": 0.7,
    "max_tokens": 500
}

response = requests.post(url, headers=headers, json=payload)
print(response.json())</code></pre>
            </div>

            <div class="code-example">
                <h3>cURL</h3>
                <pre><code>curl -X POST https://api.example.com \
  -H "Content-Type: application/json" \
  -d '{
    "model": "gpt-model-1",
    "messages": [
      {"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "Tell me about neural networks."}
    ],
    "temperature": 0.7,
    "max_tokens": 500
  }'</code></pre>
            </div>

            <div class="code-example">
                <h3>PowerShell</h3>
                <pre><code>$url = "https://api.example.com"
$headers = @{
    "Content-Type" = "application/json"
}
$body = @{
    model = "gpt-model-1"
    messages = @(
        @{
            role = "system"
            content = "You are a helpful assistant."
        },
        @{
            role = "user"
            content = "Tell me about neural networks."
        }
    )
    temperature = 0.7
    max_tokens = 500
} | ConvertTo-Json

$response = Invoke-RestMethod -Uri $url -Method Post -Headers $headers -Body $body
$response | ConvertTo-Json</code></pre>
            </div>
        </section>

        <section>
            <h2>Text Embedding Examples</h2>
            
            <div class="code-example">
                <h3>Python</h3>
                <pre><code>import requests
import numpy as np

url = "https://api.example.com/model_router"
headers = {"Content-Type": "application/json"}

payload = {
    "model": "text-embedding-3-small",
    "input": "The food was delicious and the service excellent."
}

response = requests.post(url, headers=headers, json=payload)
embedding = response.json()["data"][0]["embedding"]

# Convert to numpy array for vector operations
embedding_array = np.array(embedding)
print(f"Embedding dimension: {len(embedding)}")</code></pre>
            </div>

            <div class="code-example">
                <h3>cURL</h3>
                <pre><code>curl -X POST https://api.example.com/model_router \
  -H "Content-Type: application/json" \
  -d '{
    "model": "text-embedding-3-small",
    "input": "The food was delicious and the service excellent."
  }'</code></pre>
            </div>

            <div class="code-example">
                <h3>PowerShell</h3>
                <pre><code>$url = "https://api.example.com/model_router"
$headers = @{
    "Content-Type" = "application/json"
}
$body = @{
    model = "text-embedding-3-small"
    input = "The food was delicious and the service excellent."
} | ConvertTo-Json

$response = Invoke-RestMethod -Uri $url -Method Post -Headers $headers -Body $body
$embeddingDimension = $response.data[0].embedding.Length
Write-Host "Embedding dimension: $embeddingDimension"</code></pre>
            </div>
        </section>

        <section>
            <h2>Triton Inference Server-Specific Examples</h2>
            
            <h3>Triton Direct API (Python)</h3>
            <pre><code>import requests
import json

# Direct request to Triton Inference Server
url = "http://triton1.internal/v1/chat/completions"
headers = {"Content-Type": "application/json"}

payload = {
    "model": "gpt-model-1",  # Model name for Triton
    "messages": [
        {"role": "user", "content": "What is machine learning?"}
    ],
    "stream": false
}

response = requests.post(url, headers=headers, json=payload)
print(json.dumps(response.json(), indent=2))</code></pre>

            <h3>Triton Embeddings (Python)</h3>
            <pre><code>import requests
import numpy as np

# Direct request to Triton Embedding endpoint
url = "http://triton1.internal/v1/embeddings"
headers = {"Content-Type": "application/json"}

payload = {
    "model": "text-embedding-3-small",
    "input": ["The quick brown fox jumped over the lazy dog."]
}

response = requests.post(url, headers=headers, json=payload)
embeddings = response.json()["data"]

# Calculate embedding norm (useful for similarity calculations)
embedding_array = np.array(embeddings[0]["embedding"])
embedding_norm = np.linalg.norm(embedding_array)
print(f"Embedding norm: {embedding_norm}")</code></pre>
        </section>

        <section>
            <h2>Advanced Usage</h2>
            
            <h3>Streaming Responses</h3>
            <pre><code>import requests
import json

url = "https://api.example.com/model_router"
headers = {"Content-Type": "application/json"}

payload = {
    "model": "gpt-model-1",
    "messages": [
        {"role": "user", "content": "Write a poem about artificial intelligence."}
    ],
    "stream": true  # Enable streaming
}

response = requests.post(url, headers=headers, json=payload, stream=True)

for line in response.iter_lines():
    if line:
        line_text = line.decode('utf-8')
        if line_text.startswith('data: '):
            data = line_text[6:]  # Remove 'data: ' prefix
            if data == '[DONE]':
                break
            try:
                chunk = json.loads(data)
                if chunk.get('choices') and chunk['choices'][0].get('delta', {}).get('content'):
                    content = chunk['choices'][0]['delta']['content']
                    print(content, end='', flush=True)
            except json.JSONDecodeError:
                pass</code></pre>
            
            <h3>Batch Processing Embeddings</h3>
            <pre><code>import requests
import numpy as np

url = "https://api.example.com/model_router"
headers = {"Content-Type": "application/json"}

# Multiple texts to embed
texts = [
    "The quick brown fox jumps over the lazy dog.",
    "Machine learning is a subset of artificial intelligence.",
    "Paris is the capital of France."
]

payload = {
    "model": "text-embedding-3-large",
    "input": texts
}

response = requests.post(url, headers=headers, json=payload)
result = response.json()

# Process all embeddings
embeddings = []
for item in result["data"]:
    embeddings.append(np.array(item["embedding"]))

# Calculate similarity between first and second embedding
similarity = np.dot(embeddings[0], embeddings[1]) / (
    np.linalg.norm(embeddings[0]) * np.linalg.norm(embeddings[1])
)
print(f"Cosine similarity: {similarity}")</code></pre>
        </section>
    </main>

    <footer>
        <p>Â© 2025 GenAI Platform Engineering | For internal developer use</p>
        <p>Contact: <a href="mailto:genai-platform@example.com">genai-platform@example.com</a></p>
    </footer>
</body>
</html>
