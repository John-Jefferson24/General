{{- $images := .Files.Get "images.json" | fromJson }}
{{- if ne .Values.observability.logging_stack "LEGACY" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "0"
    project: {{ .Values.projectName }}
    service: vector
    snorkel.ai/compute-type: cpu
{{- if or .Values.services.vector.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.vector.labels .Values.services.labels) | indent 4 }}
{{- end }}
  name: vector
  namespace: {{ .Values.projectName }}
spec:
  replicas: 1
{{- if .Values.services.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.services.progressDeadlineSeconds }}
{{- end }}
  selector:
    matchLabels:
      project: {{ .Values.projectName }}
      service: vector
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        always-pinned: "0"
        project: {{ .Values.projectName }}
        service: vector
        snorkel.ai/compute-type: cpu
{{- if or .Values.services.vector.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.vector.labels .Values.services.labels) | indent 8 }}
{{- end }}
    spec:
{{- if or .Values.affinity.binPackAlwaysPinnedPods .Values.affinity.nodeAffinity }}
      affinity:
        {{- if .Values.affinity.binPackAlwaysPinnedPods }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "1"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
        {{- end }}
        {{- with .Values.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
{{- end }}
      {{- with .Values.affinity.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - args:
        - --config-dir
        - /etc/vector/
        env:
        - name: VECTOR_LOG
          value: "info"
        - name: SERVICE_TYPE
          value: vector
        - name: SNORKEL_FLOW_VERSION
          value: "{{ .Values.version }}"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CLICKHOUSE_USER_FILE
          value: /var/secrets/clickhouse/clickhouse-username
        - name: CLICKHOUSE_PASSWORD_FILE
          value: /var/secrets/clickhouse/clickhouse-password
{{- if .Values.observability.exporters.datadog.enabled }}
        - name: DD_API_KEY_FILE
          value: /var/secrets/datadog/api_key
        - name: DD_SITE_FILE
          value: /var/secrets/datadog/site
{{- end }}
{{- if .Values.observability.exporters.prometheus.enabled }}
        - name: PROMETHEUS_USER_FILE
          value: /var/secrets/prometheus/prometheus-username
        - name: PROMETHEUS_PASSWORD_FILE
          value: /var/secrets/prometheus/prometheus-password
{{- end }}
{{- range $k, $v := (merge .Values.services.vector.env .Values.services.env) }}
        - name: {{ $k }}
          value: {{ $v | toString | quote }}
{{- end }}
        {{- if .Values.image.imageNames.vector }}
        image: {{ .Values.image.imageNames.vector }}
        {{- else }}
        image: {{ template "snorkelflow.registryPrefix" . }}{{ $images.docker_hub_repo }}/{{ get $images.custom_images "vector" }}
        {{- end }}
        name: vector
        {{- if .Values.services.vector.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.services.vector.containerSecurityContext | nindent 10 }}
        {{- end }}
        ports:
        - name: vector
          containerPort: 6000
          protocol: TCP
        resources:
{{- if .Values.services.vector.resources }}
{{ toYaml .Values.services.vector.resources | indent 10 }}
{{- else }}
          requests:
            memory: 2Gi
            cpu: "1.0"
          limits:
            memory: 2Gi
            cpu: "1.0"
{{- end }}
        volumeMounts:
          - name: config
            mountPath: "/etc/vector"
            readOnly: true
          - name: helper-scripts
            mountPath: "/usr/local/bin/helpers"
            readOnly: true
          - name: vector-data-dir
            mountPath: /var/lib/vector
          - name: clickhouse-secret-volume
            mountPath: /var/secrets/clickhouse
            readOnly: true
{{- if .Values.observability.exporters.datadog.enabled }}
          - name: datadog-secret-volume
            mountPath: /var/secrets/datadog
            readOnly: true
{{- end }}
{{- if .Values.observability.exporters.prometheus.enabled }}
          - name: prometheus-secret-volume
            mountPath: /var/secrets/prometheus
            readOnly: true
{{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret | default "regcred" }}
      securityContext:
        runAsUser: 99
        fsGroup: 99
      serviceAccountName: snorkelflow-sa
      volumes:
      - name: config
        configMap:
          name: vector-config-map
          items:
          - key: aggregator.vector.yaml
            path: vector.yaml
          - key: aggregator.sources.vector.yaml
            path: sources/vector.yaml
          - key: aggregator.transforms.vector_streams.yaml
            path: transforms/vector_streams.yaml
          - key: aggregator.transforms.vector_log_streams.yaml
            path: transforms/vector_log_streams.yaml
          - key: aggregator.sinks.clickhouse_application_logs.yaml
            path: sinks/clickhouse_application_logs.yaml
{{- if .Values.observability.exporters.datadog.enabled }}
          - key: aggregator.transforms.datadog_tagged_logs.yaml
            path: transforms/datadog_tagged_logs.yaml
          - key: aggregator.sinks.datadog_logs.yaml
            path: sinks/datadog_logs.yaml
{{- end }}
{{- if .Values.observability.exporters.prometheus.enabled }}
          - key: aggregator.sinks.prometheus_metrics.yaml
            path: sinks/prometheus_metrics.yaml
{{- end }}
      - name: helper-scripts
        configMap:
          name: vector-helpers-config-map
          defaultMode: 0755
      - name: vector-data-dir
        emptyDir: {}
      - name: clickhouse-secret-volume
        secret:
          secretName: clickhouse-secret
{{- if .Values.observability.exporters.datadog.enabled }}
      - name: datadog-secret-volume
        secret:
          secretName: {{ .Values.observability.exporters.datadog.secretName | default "datadog-secret" | quote }}
{{- end }}
{{- if .Values.observability.exporters.prometheus.enabled }}
      - name: prometheus-secret-volume
        secret:
          secretName: {{ .Values.observability.exporters.prometheus.secretName | default "prometheus-secret" | quote }}
{{- end }}
{{- end }}