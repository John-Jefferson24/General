{{- $images := .Files.Get "images.json" | fromJson }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "1"
    service: db
    project: {{ .Values.projectName }}
    snorkel.ai/compute-type: cpu
{{- if or .Values.services.db.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.db.labels .Values.services.labels) | indent 4 }}
{{- end }}
  name: db
  namespace: {{ .Values.projectName }}
spec:
  strategy:
    type: Recreate
  replicas: 1
{{- if .Values.services.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.services.progressDeadlineSeconds }}
{{- end }}
  selector:
    matchLabels:
      service: db
      project: {{ .Values.projectName }}
  template:
    metadata:
      labels:
        always-pinned: "1"
        service: db
        project: {{ .Values.projectName }}
        snorkel.ai/compute-type: cpu
{{- if or .Values.services.db.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.db.labels .Values.services.labels) | indent 8 }}
{{- end }}
    spec:
{{- if or .Values.affinity.binPackAlwaysPinnedPods .Values.affinity.nodeAffinity }}
      affinity:
        {{- if .Values.affinity.binPackAlwaysPinnedPods }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "0"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
        {{- end }}
        {{- with .Values.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
{{- end }}
      {{- with .Values.affinity.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret | default "regcred" }}
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: snorkelflow-sa
      containers:
      - args:
        - -c
        - shared_buffers={{ .Values.services.db.shared_buffers }}
        - -c
        - maintenance_work_mem=1GB
        - -c
        - work_mem=64MB
        - -c
        - shared_preload_libraries=pg_stat_statements,auto_explain
        - -c
        - auto_explain.log_min_duration=15s
        - -c
        - logging_collector=on
        - -c
        - log_directory=log
        - -c
        - log_filename=postgresql-%Y-%m-%d-%a.log
        - -c
        - "log_line_prefix=%m [%r] [%p]: [%l-1] user=%u,db=%d,host=%h "
        - -c
        - log_checkpoints=on
        - -c
        - log_truncate_on_rotation=on
        - -c
        - log_lock_waits=on
        - -c
        - log_temp_files=0
        - -c
        - max_wal_size=1GB
        - -c
        - wal_level=logical
        - -c
        - log_min_duration_statement=1000
        - -c
        - log_lock_waits=on
        - -c
        - log_checkpoints=on
        - -c
        - log_autovacuum_min_duration=250ms
        - -c
        - max_connections=600
        - -c
        - tcp_keepalives_idle=60
        - -c
        - tcp_keepalives_interval=5
        - -c
        - tcp_keepalives_count=5
        - -c
        - random_page_cost=1
        - -c
        - jit=off
        env:
        - name: SERVICE_TYPE
          value: db
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: TELEGRAF_CADVISOR_URL
          value: telegraf:8186
{{- if .Values.services.db.secretsFromFile }}
{{- /*
        # POSTGRES_PASSWORD_FILE is an env var to read password from a file, and
        # it must end with the key in the secret: i.e., postgres_password.
        # See "Docker Secrets" in https://hub.docker.com/_/postgres for more info.
*/}}
        - name: POSTGRES_PASSWORD_FILE
          value: /etc/postgres-secret/postgres_password
{{- else }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres_password
{{- end }}
{{- range $k, $v := (merge .Values.services.db.env .Values.services.env) }}
        - name: {{ $k }}
          value: {{ $v | toString | quote }}
{{- end }}
        {{- if .Values.image.imageNames.postgres }}
        image: {{ .Values.image.imageNames.postgres }}
        {{- else }}
        image: {{ template "snorkelflow.registryPrefix" . }}{{ $images.docker_hub_repo }}/{{ get $images.custom_images "postgres" }}
        {{- end }}
        name: db
        {{- if .Values.services.db.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.services.db.containerSecurityContext | nindent 10 }}
        {{- end }}
        ports:
          - containerPort: 5432
        volumeMounts:
        - name: empty-dir
          mountPath: /var/run
          subPath: var-run-dir
        - name: empty-dir
          mountPath: /var/log
          subPath: log-dir
        - mountPath: /var/lib/postgresql/data
          name: postgres
        - mountPath: /dev/shm
          name: dshm
{{- if .Values.services.db.secretsFromFile }}
        - mountPath: /etc/postgres-secret/
          readOnly: true
          name: postgres-secret-volume
{{- end }}
        resources:
{{- if .Values.services.db.resources }}
{{ toYaml .Values.services.db.resources | indent 10 }}
{{- else }}
          requests:
            memory: 8.0Gi
            cpu: "2.0"
          limits:
            memory: 8.0Gi
            cpu: "2.0"
{{- end }}
      volumes:
      - name: postgres
        persistentVolumeClaim:
          claimName: {{ .Values.projectName }}-postgres
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 512Mi
      - name: empty-dir
        emptyDir: {}
{{- if .Values.services.db.secretsFromFile }}
      - name: postgres-secret-volume
        secret:
          secretName: postgres-secret
{{- end }}
