{{- $images := .Files.Get "images.json" | fromJson }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "0"
    service: envoy-front-proxy
    project: {{ .Values.projectName }}
    snorkel.ai/compute-type: cpu
{{- if or .Values.services.envoyFrontProxy.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.envoyFrontProxy.labels .Values.services.labels) | indent 4 }}
{{- end }}
  name: envoy-front-proxy
  namespace: {{ .Values.projectName }}
spec:
  strategy:
    type: Recreate
  replicas: 1
{{- if .Values.services.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.services.progressDeadlineSeconds }}
{{- end }}
  selector:
    matchLabels:
      service: envoy-front-proxy
      project: {{ .Values.projectName }}
  template:
    metadata:
      labels:
        always-pinned: "0"
        service: envoy-front-proxy
        project: {{ .Values.projectName }}
        snorkel.ai/compute-type: cpu
{{- if or .Values.services.envoyFrontProxy.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.envoyFrontProxy.labels .Values.services.labels) | indent 8 }}
{{- end }}
    spec:
{{- if or .Values.affinity.binPackAlwaysPinnedPods .Values.affinity.nodeAffinity }}
      affinity:
        {{- if .Values.affinity.binPackAlwaysPinnedPods }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "1"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
        {{- end }}
        {{- with .Values.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
{{- end }}
      {{- with .Values.affinity.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret | default "regcred" }}
      securityContext:
        runAsUser: 99
      serviceAccountName: snorkelflow-sa
      volumes:
      - configMap:
          name: envoy-front-proxy-envoy-front-proxy-json-config-map
        name: envoy-front-proxy-envoy-front-proxy-json-volume
      - secret:
          secretName: {{ .Values.traffic.tls.key_secret_name }}
        name: envoy-front-proxy-envoy-tls-key-pem-volume
      - secret:
          secretName: {{ .Values.traffic.tls.cert_secret_name }}
        name: envoy-front-proxy-envoy-tls-cert-pem-volume
      - name: empty-dir
        emptyDir: {}
      containers:
      - args:
        - 'envoy'
        - '-c'
        - '/etc/envoy/config/envoy-front-proxy.json'
        env:
        - name: SERVICE_TYPE
          value: envoy-front-proxy
        - name: ENVOY_CONFIG_VERSION
          value: "2"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: TDM_API_URL
          value: http://tdm-api:8686
        - name: STORAGE_API_URL
          value: http://storage-api:31315
        - name: STUDIO_API_URL
          value: http://studio-api:8484
{{- if not .Values.services.jupyterhub.enabled }}
        - name: NOTEBOOK_URL
          value: http://notebook:8282
{{- end }}
        - name: MINIO_URL
          value: http://minio:9001
        - name: GRAFANA_URL
          value: http://grafana:3000
{{- if .Values.services.jupyterhub.enabled }}
        - name: JUPYTERHUB_URL
          value: http://jupyterhub-proxy:8001
{{- end }}
        - name: FLOW_UI_URL
          value: http://flow-ui:5000
        - name: TELEGRAF_CADVISOR_URL
          value: telegraf:8186
{{- range $k, $v := (merge .Values.services.envoyFrontProxy.env .Values.services.env) }}
        - name: {{ $k }}
          value: {{ $v | toString | quote }}
{{- end }}
        {{- if .Values.image.imageNames.envoy }}
        image: {{ .Values.image.imageNames.envoy }}
        {{- else }}
        image: {{ template "snorkelflow.registryPrefix" . }}{{ $images.docker_hub_repo }}/{{ get $images.custom_images "envoy" }}
        {{- end }}
        name: envoy-front-proxy
        {{- if .Values.services.envoyFrontProxy.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.services.envoyFrontProxy.containerSecurityContext | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: 18686
        - containerPort: 32315
        - containerPort: 18484
{{- if not .Values.services.jupyterhub.enabled }}
        - containerPort: 18888
{{- end }}
        - containerPort: 18989
        - containerPort: 18990
        - containerPort: 30000
{{- if .Values.services.jupyterhub.enabled }}
        - containerPort: 18000
{{- end }}
        - containerPort: 1443
        - containerPort: 1080
        - containerPort: 9901
        readinessProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 3
          periodSeconds: 30
        startupProbe:
          httpGet:
            path: /ready
            port: 9901
          periodSeconds: 30
          failureThreshold: 120
        livenessProbe:
          httpGet:
            path: /ready
            port: 9901
          periodSeconds: 30
        resources:
{{- if .Values.services.envoyFrontProxy.resources }}
{{ toYaml .Values.services.envoyFrontProxy.resources | indent 10 }}
{{- else }}
          limits:
            cpu: '0.5'
            memory: 1.0Gi
          requests:
            cpu: '0.5'
            memory: 1.0Gi
{{- end }}
        volumeMounts:
        - mountPath: /tmp
          subPath: tmp-dir
          name: empty-dir
        - mountPath: /var/log
          subPath: log-dir
          name: empty-dir
        - mountPath: /etc/envoy/config
          name: envoy-front-proxy-envoy-front-proxy-json-volume
        - mountPath: /etc/envoy/key
          name: envoy-front-proxy-envoy-tls-key-pem-volume
        - mountPath: /etc/envoy/cert
          name: envoy-front-proxy-envoy-tls-cert-pem-volume
