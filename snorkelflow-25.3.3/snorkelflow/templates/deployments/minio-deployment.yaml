{{- $images := .Files.Get "images.json" | fromJson }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "0"
    service: minio
    project: {{ .Values.projectName }}
    snorkel.ai/compute-type: cpu
{{- if or .Values.services.minio.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.minio.labels .Values.services.labels) | indent 4 }}
{{- end }}
  name: minio
  namespace: {{ .Values.projectName }}
spec:
  strategy:
    type: Recreate
  replicas: 1
{{- if .Values.services.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.services.progressDeadlineSeconds }}
{{- end }}
  selector:
    matchLabels:
      service: minio
      project: {{ .Values.projectName }}
  template:
    metadata:
      labels:
        always-pinned: "0"
        service: minio
        project: {{ .Values.projectName }}
        snorkel.ai/compute-type: cpu
{{- if or .Values.services.minio.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.minio.labels .Values.services.labels) | indent 8 }}
{{- end }}
    spec:
{{- if or .Values.affinity.binPackAlwaysPinnedPods .Values.affinity.nodeAffinity }}
      affinity:
        {{- if .Values.affinity.binPackAlwaysPinnedPods }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "1"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
        {{- end }}
        {{- with .Values.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
{{- end }}
      {{- with .Values.affinity.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret | default "regcred" }}
      securityContext:
        runAsUser: 99
        fsGroup: 99
      serviceAccountName: snorkelflow-sa
      containers:
      - env:
        - name: SERVICE_TYPE
          value: minio
        - name: SNORKELFLOW_MOUNT_DIR
          value: /data
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: TELEGRAF_CADVISOR_URL
          value: telegraf:8186
{{- if not .Values.services.minio.ui.enabled }}
        - name: MINIO_BROWSER
          value: "off"
{{- end }}
{{- if .Values.services.minio.secretsFromFile }}
        - name: MINIO_ACCESS_KEY_FILE
          value: /etc/secrets/minio-secret/minio_access_key
        - name: MINIO_SECRET_KEY_FILE
          value: /etc/secrets/minio-secret/minio_secret_key
{{- else }}
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: minio_access_key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: minio_secret_key
{{- end }}
{{- range $k, $v := (merge .Values.services.minio.env .Values.services.env) }}
        - name: {{ $k }}
          value: {{ $v | toString | quote }}
{{- end }}
        args:
        - server
        - /data
{{- if .Values.services.minio.ui.enabled }}
        - --console-address
        - :9000
{{- end }}
        - --address
        - :9001
        {{- if .Values.image.imageNames.minio }}
        image: {{ .Values.image.imageNames.minio }}
        {{- else }}
        image: {{ template "snorkelflow.registryPrefix" . }}{{ $images.docker_hub_repo }}/{{ get $images.custom_images "minio" }}
        {{- end }}
        name: minio
        {{- if .Values.services.minio.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.services.minio.containerSecurityContext | nindent 10 }}
        {{- end }}
        ports:
        {{- if .Values.services.minio.ui.enabled }}
          - containerPort: 9000
        {{- end }}
          - containerPort: 9001
        resources:
{{- if .Values.services.minio.resources }}
{{ toYaml .Values.services.minio.resources | indent 10 }}
{{- else }}
          requests:
            memory: 2.0Gi
            cpu: "1.0"
          limits:
            memory: 2.0Gi
            cpu: "1.0"
{{- end }}
        readinessProbe:
          httpGet:
            path: /minio/health/live
            port: 9001
          initialDelaySeconds: 3
          periodSeconds: 30
        startupProbe:
          httpGet:
            path: /minio/health/live
            port: 9001
          periodSeconds: 30
          failureThreshold: 120
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9001
          periodSeconds: 30
        volumeMounts:
        - mountPath: /.minio
          subPath: minio-dir
          name: empty-dir
        - mountPath: /data
          name: data
{{- if .Values.services.minio.secretsFromFile }}
        - name: minio-secret-volume
          mountPath: /etc/secrets/minio-secret
          readOnly: true
{{- end }}
      volumes:
      - name: empty-dir
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: {{ template "snorkelflow.pvcName" . }}
{{- if .Values.services.minio.secretsFromFile }}
      - name: minio-secret-volume
        secret:
          secretName: minio-secret
{{- end }}
