{{- $images := .Files.Get "images.json" | fromJson }}
{{- if ne .Values.observability.logging_stack "LEGACY" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "0"
    project: {{ .Values.projectName }}
    service: clickhouse
    snorkel.ai/compute-type: cpu
{{- if or .Values.services.clickhouse.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.clickhouse.labels .Values.services.labels) | indent 4 }}
{{- end }}
  name: clickhouse
  namespace: {{ .Values.projectName }}
spec:
  replicas: 1
{{- if .Values.services.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.services.progressDeadlineSeconds }}
{{- end }}
  selector:
    matchLabels:
      project: {{ .Values.projectName }}
      service: clickhouse
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        always-pinned: "0"
        project: {{ .Values.projectName }}
        service: clickhouse
        snorkel.ai/compute-type: cpu
{{- if or .Values.services.clickhouse.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.clickhouse.labels .Values.services.labels) | indent 8 }}
{{- end }}
    spec:
{{- if or .Values.affinity.binPackAlwaysPinnedPods .Values.affinity.nodeAffinity }}
      affinity:
        {{- if .Values.affinity.binPackAlwaysPinnedPods }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "1"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
        {{- end }}
        {{- with .Values.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
{{- end }}
      {{- with .Values.affinity.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - args: []
        env:
        - name: SERVICE_TYPE
          value: clickhouse
        - name: SNORKEL_FLOW_VERSION
          value: "{{ .Values.version }}"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CLICKHOUSE_USER_FILE
          value: /var/secrets/clickhouse/clickhouse-username
        - name: CLICKHOUSE_PASSWORD_FILE
          value: /var/secrets/clickhouse/clickhouse-password
        - name: CLICKHOUSE_READONLY_USER_FILE
          value: /var/secrets/clickhouse/clickhouse-readonly-username
        - name: CLICKHOUSE_READONLY_PASSWORD_FILE
          value: /var/secrets/clickhouse/clickhouse-readonly-password
        - name: CLICKHOUSE_MIGRATIONS_PATH
          value: /etc/clickhouse-server-migrations.d
{{- range $k, $v := (merge .Values.services.clickhouse.env .Values.services.env) }}
        - name: {{ $k }}
          value: {{ $v | toString | quote }}
{{- end }}
        {{- if .Values.image.imageNames.clickhouse }}
        image: {{ .Values.image.imageNames.clickhouse }}
        {{- else }}
        image: {{ template "snorkelflow.registryPrefix" . }}{{ $images.docker_hub_repo }}/{{ get $images.custom_images "clickhouse" }}
        {{- end }}
        name: clickhouse
        ports:
        - name: http
          containerPort: 8123
          protocol: TCP
        - name: native
          containerPort: 9000
          protocol: TCP
        - name: grpc
          containerPort: 9100
          protocol: TCP
        - name: prometheus
          containerPort: 9363
          protocol: TCP
        resources:
{{- if .Values.services.clickhouse.resources }}
{{ toYaml .Values.services.clickhouse.resources | indent 10 }}
{{- else }}
          requests:
            memory: 8Gi
            cpu: "2.0"
          limits:
            memory: 8Gi
            cpu: "2.0"
{{- end }}
        {{- if .Values.services.clickhouse.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.services.clickhouse.containerSecurityContext | nindent 10 }}
        {{- else }}
        securityContext:
          readOnlyRootFilesystem: true
        {{- end }}
        volumeMounts:
          - name: clickhouse
            mountPath: "/var/lib/clickhouse"
          - name: empty-dir
            mountPath: /tmp
            subPath: tmp-dir
          - name: clickhouse-migrations
            mountPath: /etc/clickhouse-server-migrations.d
          - name: clickhouse-config
            mountPath: /etc/clickhouse-server/config.d
          - name: empty-dir
            mountPath: /etc/clickhouse-server/users.d
            subPath: user-config
          - name: empty-dir
            mountPath: /var/log
            subPath: log-dir
          - name: clickhouse-secret-volume
            mountPath: /var/secrets/clickhouse
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret | default "regcred" }}
      securityContext:
        runAsUser: 99
        fsGroup: 99
      serviceAccountName: snorkelflow-sa
      volumes:
      - name: clickhouse
        persistentVolumeClaim:
          claimName: {{ .Values.projectName }}-clickhouse
      - name: empty-dir
        emptyDir: {}
      - name: clickhouse-secret-volume
        secret:
          secretName: clickhouse-secret
      - name: clickhouse-config
        configMap:
          name: clickhouse-config-config-map
      - name: clickhouse-migrations
        configMap:
          name: clickhouse-migrations-config-map
{{- end }}