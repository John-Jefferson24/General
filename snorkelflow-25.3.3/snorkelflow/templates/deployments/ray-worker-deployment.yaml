{{- $enable_gpu := and .Values.gpu.enabled (eq (.Values.services.rayGpuWorker.max_replicas | toString) "0") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "0"
    service: ray-worker
    project: {{ .Values.projectName }}
    snorkel.ai/ray-autoscaler-cluster: engine-ray
    snorkel.ai/ray-autoscaler-kind: worker
    snorkel.ai/ray-autoscaler-type: ray-worker
    snorkel.ai/ray-cluster-name: ray-cluster
{{- if $enable_gpu }}
    snorkel.ai/compute-type: gpu
{{- else }}
    snorkel.ai/compute-type: cpu
{{- end }}
{{- if or .Values.services.rayWorker.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.rayWorker.labels .Values.services.labels) | indent 4 }}
{{- end }}
  name: ray-worker
  namespace: {{ .Values.projectName }}
spec:
  strategy:
    type: Recreate
{{- if eq .Values.autoscaling.worker_autoscaling "1" }}
  replicas: {{ .Values.services.rayWorker.min_replicas }}
{{- else }}
  replicas: {{ .Values.services.rayWorker.max_replicas }}
{{- end }}
{{- if .Values.services.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.services.progressDeadlineSeconds }}
{{- end }}
  selector:
    matchLabels:
      service: ray-worker
      project: {{ .Values.projectName }}
  template:
    metadata:
      labels:
        always-pinned: "0"
        service: ray-worker
        project: {{ .Values.projectName }}
        snorkel.ai/ray-autoscaler-cluster: engine-ray
        snorkel.ai/ray-autoscaler-kind: worker
        snorkel.ai/ray-autoscaler-type: ray-worker
        snorkel.ai/ray-cluster-name: ray-cluster
{{- if $enable_gpu }}
        snorkel.ai/compute-type: gpu
{{- else }}
        snorkel.ai/compute-type: cpu
{{- end }}
{{- if or .Values.services.rayWorker.labels .Values.services.labels}}
{{ toYaml (merge .Values.services.rayWorker.labels .Values.services.labels) | indent 8 }}
{{- end }}
    spec:
{{- if or .Values.affinity.binPackAlwaysPinnedPods .Values.affinity.nodeAffinity }}
      affinity:
        {{- if .Values.affinity.binPackAlwaysPinnedPods }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "1"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
          {{- if eq .Values.autoscaling.worker_autoscaling "0" }}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - engine
                  - model-trainer
                  - ray-worker
              topologyKey: kubernetes.io/hostname
          {{- end }}
        {{- end }}
        {{- if not .Values.gpu.enabled }}
        {{- with .Values.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
{{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret | default "regcred" }}
      securityContext:
        runAsUser: 99
        fsGroup: 99
      serviceAccountName: snorkelflow-sa
{{- if and (and .Values.gpu.enabled .Values.gpu.gpu_config) (eq (.Values.services.rayGpuWorker.max_replicas | toString) "0") }}
  {{- if .Values.gpu.gpu_config.node_selectors }}
      nodeSelector:
        {{- range $key, $value := .Values.gpu.gpu_config.node_selectors }}
        {{ $key }}: "{{ $value }}"
        {{- end }}
  {{- end }}
  {{- if .Values.gpu.gpu_config.schedulerName }}
      schedulerName: {{ .Values.gpu.gpu_config.schedulerName }}
  {{- end }}
  {{- if .Values.gpu.gpu_config.tolerations }}
    {{- with .Values.gpu.gpu_config.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- else }}
  {{- if .Values.affinity.nodeSelectors }}
    {{- with .Values.affinity.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
  {{- if .Values.affinity.tolerations }}
    {{- with .Values.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- end }}
      containers:
      - env:
        - name: SERVICE_TYPE
          value: ray-worker
        - name: HF_HOME
          value: "/tmp/snorkel-pretrained-models"
        - name: IS_GPU_ENABLED
{{- if and .Values.gpu.enabled (ne (.Values.services.rayGpuWorker.max_replicas | toString) "0") }}
          value: "0"
{{- else }}
          value: "1"
{{- end }}
        - name: SNORKEL_FLOW_VERSION
          value: "{{ .Values.version }}"
        - name: ENABLE_ROUTINE_ANALYZE
          value: "False"
        - name: DB_MINCONN
          value: "0"
        - name: DB_MAXCONN
          value: "0"
        - name: ENABLE_IPV6
          value: "False"
        - name: SSO_HOST_IP
          value: {{ .Values.traffic.ingresses.services.snorkelflow.urlPrefix }}.{{ .Values.traffic.ingresses.domain }}
        - name: ENABLE_PRETRAINED_MODEL_DIRECTORY
          value: {{ .Values.pretrained_models.enabled | toString | title | quote }}
        - name: ARROW_CACHE_ENABLED
          value: {{ if .Values.optimizations.arrow_cache.enabled }}"1"{{ else }}"0"{{ end }}
        - name: LD_PRELOAD
          value: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
        - name: MALLOC_CONF
          value: background_thread:true
        - name: MALLOC_MMAP_THRESHOLD_
          value: "16384"
        - name: CUPY_CACHE_DIR
          value: /var/lib/snorkel/.cupy-cache
        - name: LOGGING_STACK
          value: {{ .Values.observability.logging_stack }}
        - name: SNORKELFLOW_MOUNT_DIR
          value: /data
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: REDIS_URL
          value: redis
        - name: MINIO_URL
          value: http://minio:9001
        - name: TELEGRAF_CADVISOR_URL
          value: telegraf:8186
        - name: TELEGRAF_URL
          value: http://telegraf:8125
{{- if .Values.services.rayWorker.secretsFromFile }}
        - name: TDM_CONN_STR_FILE
          value: /etc/secrets/db-secret/tdm_conn_str
        - name: MINIO_ACCESS_KEY_FILE
          value: /etc/secrets/minio-secret/minio_access_key
        - name: MINIO_SECRET_KEY_FILE
          value: /etc/secrets/minio-secret/minio_secret_key
        {{- if .Values.influx_cloud_key }}
        - name: INFLUXDB_CLOUD_TOKEN_G498_FILE
          value: /etc/secrets/influxdb-cloud-secret/influxdb_cloud_token
        {{- end }}
{{- else }}
        - name: TDM_CONN_STR
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: tdm_conn_str
        - name: STORAGE_API_URL
          value: http://storage-api:31315
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: minio_access_key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: minio_secret_key
        {{- if .Values.influx_cloud_key }}
        - name: INFLUXDB_CLOUD_TOKEN_G498
          valueFrom:
            secretKeyRef:
              name: influxdb-cloud-secret
              key: influxdb_cloud_token
        {{- end }}
{{- end }}
{{- with include "launchDarkly.envVars" . }}
{{ . | indent 8 }}
{{- end }}
{{- if and .Values.traffic.istio.enabled ((.Values.traffic.istio).mtls).enabled }}
        - name: IS_ISTIO_STRICT_MTLS_ENABLED
          value: "True"
{{- end }}
{{- range $k, $v := (merge .Values.services.rayWorker.env .Values.services.env) }}
        - name: {{ $k }}
          value: {{ $v | toString | quote }}
{{- end }}
        {{- if .Values.image.imageNames.engine }}
        image: {{ .Values.image.imageNames.engine }}
        {{- else if $enable_gpu }}
        image: {{ template "snorkelflow.registryPrefix" . }}snorkelai/engine:{{ .Values.version }}-cuda
        {{- else }}
        image: {{ template "snorkelflow.registryPrefix" . }}snorkelai/engine:{{ .Values.version }}
        {{- end }}
        {{- if .Values.image.imagePullPolicy }}
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        {{- end }}
        name: ray-worker
        {{- if .Values.services.rayWorker.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.services.rayWorker.containerSecurityContext | nindent 10 }}
        {{- end }}
        args:
        - ray-worker
        - --ray-head-port=7379
        ports: []
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /var/log
          name: empty-dir
          subPath: log-dir
        - mountPath: /data
          name: data
        - mountPath: /etc/auth/jwt
          name: jwt-key-pub
        - mountPath: /dev/shm
          name: dshm
{{- if .Values.services.rayWorker.secretsFromFile }}
        - name: minio-secret-volume
          mountPath: /etc/secrets/minio-secret
          readOnly: true
        - name: db-secret-volume
          mountPath: /etc/secrets/db-secret
          readOnly: true
        {{- if .Values.influx_cloud_key }}
        - name: influxdb-cloud-secret-volume
          mountPath: /etc/secrets/influxdb-cloud-secret
          readOnly: true
        {{- end }}
{{- end }}
{{- with include "logging.mounts" (deepCopy . | merge (dict "service_type" "ray-worker")) }}
{{ . | indent 8 }}
{{- end }}
        resources:
{{- if .Values.services.rayWorker.resources }}
{{ toYaml .Values.services.rayWorker.resources | indent 10 }}
{{- else }}
          requests:
            memory: 16.0Gi
            cpu: "4.0"
  {{- if $enable_gpu }}
            nvidia.com/gpu: '1'
  {{- end }}
          limits:
            memory: 16.0Gi
            cpu: "4.0"
  {{- if $enable_gpu }}
            nvidia.com/gpu: '1'
  {{- end }}
{{- end }}
{{- with include "logging.sidecar" (deepCopy . | merge (dict "service_type" "ray-worker")) }}
{{ . | indent 6 }}
{{- end }}
      volumes:
      - name: empty-dir
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: {{ template "snorkelflow.pvcName" . }}
      - name: jwt-key-pub
        secret:
          secretName: jwt-key-pub
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 10000Mi
{{- if .Values.services.rayWorker.secretsFromFile }}
      - name: minio-secret-volume
        secret:
          secretName: minio-secret
      - name: db-secret-volume
        secret:
          secretName: db-secret
      {{- if .Values.influx_cloud_key }}
      - name: influxdb-cloud-secret-volume
        secret:
          secretName: influxdb-cloud-secret
      {{- end }}
{{- end }}
{{- with include "logging.volumes" (deepCopy . | merge (dict "service_type" "ray-worker")) }}
{{ . | indent 6 }}
{{- end }}