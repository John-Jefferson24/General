apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    always-pinned: "1"
    service: ray-head
    project: {{ .Values.projectName }}
    snorkel.ai/ray-autoscaler-cluster: engine-ray
    snorkel.ai/ray-autoscaler-kind: head
    snorkel.ai/ray-autoscaler-type: ray-head
    snorkel.ai/ray-cluster-name: ray-cluster
    snorkel.ai/compute-type: cpu
{{- if or .Values.services.rayHead.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.rayHead.labels .Values.services.labels) | indent 4 }}
{{- end }}
  name: ray-head
  namespace: {{ .Values.projectName }}
spec:
  strategy:
    type: Recreate
  replicas: 1
{{- if .Values.services.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{ .Values.services.progressDeadlineSeconds }}
{{- end }}
  selector:
    matchLabels:
      service: ray-head
      project: {{ .Values.projectName }}
  template:
    metadata:
      labels:
        always-pinned: "1"
        service: ray-head
        project: {{ .Values.projectName }}
        snorkel.ai/ray-autoscaler-cluster: engine-ray
        snorkel.ai/ray-autoscaler-kind: head
        snorkel.ai/ray-autoscaler-type: ray-head
        snorkel.ai/ray-cluster-name: ray-cluster
        snorkel.ai/compute-type: cpu
{{- if or .Values.services.rayHead.labels .Values.services.labels }}
{{ toYaml (merge .Values.services.rayHead.labels .Values.services.labels) | indent 8 }}
{{- end }}
    spec:
{{- if or .Values.affinity.binPackAlwaysPinnedPods .Values.affinity.nodeAffinity }}
      affinity:
        {{- if .Values.affinity.binPackAlwaysPinnedPods }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: always-pinned
                operator: In
                values:
                - "0"
            topologyKey: kubernetes.io/hostname
            namespaceSelector: {}
        {{- end }}
        {{- with .Values.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
{{- end }}
      {{- with .Values.affinity.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret | default "regcred" }}
      securityContext:
        runAsUser: 99
        fsGroup: 99
      serviceAccountName: snorkelflow-internal-k8s-rw-sa
      containers:
      - env:
        - name: SERVICE_TYPE
          value: ray-head
        - name: SNORKEL_FLOW_VERSION
          value: "{{ .Values.version }}"
        - name: ENABLE_ROUTINE_ANALYZE
          value: "False"
        - name: DB_MINCONN
          value: "0"
        - name: DB_MAXCONN
          value: "0"
        - name: RAY_DASHBOARD_BUILD_FOLLOW_SYMLINKS
          value: "1"
        - name: ENABLE_IPV6
          value: "False"
{{- if eq .Values.autoscaling.worker_autoscaling "1" }}
        - name: POD_AUTOSCALING_ENABLED
          value: "1"
{{- else }}
        - name: POD_AUTOSCALING_ENABLED
          value: "0"
{{- end }}
        - name: RAY_WORKER_REPLICA_DEFAULT_COUNT
          value: {{ .Values.services.rayWorker.max_replicas | quote }}
        - name: RAY_GPU_WORKER_REPLICA_DEFAULT_COUNT
          value: {{ .Values.services.rayGpuWorker.max_replicas | quote }}
        - name: RAY_WORKER_REPLICA_MIN_COUNT
          value: {{ .Values.services.rayWorker.min_replicas | quote }}
        - name: RAY_GPU_WORKER_REPLICA_MIN_COUNT
          value: {{ .Values.services.rayGpuWorker.min_replicas | quote }}
        - name: LD_PRELOAD
          value: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
        - name: MALLOC_CONF
          value: background_thread:true
        - name: MALLOC_MMAP_THRESHOLD_
          value: "16384"
        - name: CUPY_CACHE_DIR
          value: /var/lib/snorkel/.cupy-cache
        - name: LOGGING_STACK
          value: {{ .Values.observability.logging_stack }}
        - name: SNORKELFLOW_MOUNT_DIR
          value: /data
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: TDM_API_URL
          value: http://tdm-api:8686
        - name: REDIS_URL
          value: redis
        - name: MINIO_URL
          value: http://minio:9001
        - name: TELEGRAF_CADVISOR_URL
          value: telegraf:8186
        - name: TELEGRAF_URL
          value: http://telegraf:8125
{{- if .Values.services.rayHead.secretsFromFile }}
        - name: TDM_CONN_STR_FILE
          value: /etc/secrets/db-secret/tdm_conn_str
{{- else }}
        - name: TDM_CONN_STR
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: tdm_conn_str
{{- end }}
{{- with include "launchDarkly.envVars" . }}
{{ . | indent 8 }}
{{- end }}
{{- if and .Values.traffic.istio.enabled ((.Values.traffic.istio).mtls).enabled }}
        - name: IS_ISTIO_STRICT_MTLS_ENABLED
          value: "True"
{{- end }}
{{- range $k, $v := (merge .Values.services.rayHead.env .Values.services.env) }}
        - name: {{ $k }}
          value: {{ $v | toString | quote }}
{{- end }}
        {{- if .Values.image.imageNames.engine }}
        image: {{ .Values.image.imageNames.engine }}
        {{- else if .Values.gpu.enabled }}
        image: {{ template "snorkelflow.registryPrefix" . }}snorkelai/engine:{{ .Values.version }}-cuda
        {{- else }}
        image: {{ template "snorkelflow.registryPrefix" . }}snorkelai/engine:{{ .Values.version }}
        {{- end }}
        {{- if .Values.image.imagePullPolicy }}
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        {{- end }}
        name: ray-head
        {{- if .Values.services.rayHead.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.services.rayHead.containerSecurityContext | nindent 10 }}
        {{- end }}
        args:
        - ray-head
        - --ray-dashboard-enabled=True
        {{- if .Values.volumes.snorkelflowData.smb }}
        - --data-dir-is-smb=True
        {{- else }}
        - --data-dir-is-smb=False
        {{- end }}
        ports:
          - containerPort: 7379
          - containerPort: 8265
          - containerPort: 10001
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /var/log
          name: empty-dir
          subPath: log-dir
        - mountPath: /data
          name: data
        - mountPath: /etc/auth/jwt
          name: jwt-key-pub
        - mountPath: /dev/shm
          name: dshm
{{- if .Values.services.rayHead.secretsFromFile }}
        - mountPath: /etc/secrets/db-secret
          name: db-secret-volume
          readOnly: true
{{- end }}
{{- with include "logging.mounts" (deepCopy . | merge (dict "service_type" "ray-head")) }}
{{ . | indent 8 }}
{{- end }}
        resources:
{{- if .Values.services.rayHead.resources }}
{{ toYaml .Values.services.rayHead.resources | indent 10 }}
{{- else }}
          requests:
            memory: 16.0Gi
            cpu: "2.0"
          limits:
            memory: 16.0Gi
            cpu: "2.0"
{{- end }}
{{- with include "logging.sidecar" (deepCopy . | merge (dict "service_type" "ray-head")) }}
{{ . | indent 6 }}
{{- end }}
      volumes:
      - name: empty-dir
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: {{ template "snorkelflow.pvcName" . }}
      - name: jwt-key-pub
        secret:
          secretName: jwt-key-pub
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 10000Mi
{{- if .Values.services.rayHead.secretsFromFile }}
      - name: db-secret-volume
        secret:
          secretName: db-secret
{{- end }}
{{- with include "logging.volumes" (deepCopy . | merge (dict "service_type" "ray-head")) }}
{{ . | indent 6 }}
{{- end }}